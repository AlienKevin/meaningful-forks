!async function(){let e=window.prompt("insert the github token"),t=document.createElement("span");function r(e){return e}t.innerText="Sorting \uD83C\uDF74forks...",t.style.position="fixed",t.style.background="#22f922",t.style.padding="10px",t.style.borderRadius="10px",t.style.zIndex="9999",t.style.left="calc(50% - 60px)",t.style.top="calc(50% - 20px)",document.body.appendChild(t);let a=document.querySelector("#network"),n=a.firstElementChild.lastElementChild.getAttribute("href").substring(1);console.log("TCL: currentRepoUrl",n);let i=n.substring(0,n.lastIndexOf("/")),o=u=`https://api.github.com/repos/${n}/forks?sort=stargazers`;console.log("TCL: forkApiUrl",o);let l=await fetch(o,{method:"get",headers:new Headers({Authorization:`Bearer ${e}`})}),s=await l.json();s.forEach(e=>{console.log(e.full_name+", ")}),console.log("TCL: forks.length: "+s.length);let d=[];async function h(t,r){let a,n=await fetch(t,{method:"get",headers:new Headers({Authorization:`Bearer ${e}`})});if(n.ok)a=await n.json();else throw Error("Network response is not OK!");if("string"==typeof r)return i(a,r);if(Array.isArray(r))return r.map(e=>i(a,e));function i(e,t){if(!(t.indexOf(".")>=0))return e[t];{let r=e,a=t.split(".");return a.forEach(e=>{r=r[e]}),r}}}async function c(e){var t;let r=t=`https://api.github.com/repos/${e}`;return h(r,"default_branch")}var u,p,g,f,_="stargazers_count";function $(e){let t="http://www.w3.org/2000/svg";var r=document.createElementNS(t,"svg");r.setAttribute("height",12),r.setAttribute("width",10.5),r.setAttribute("viewBox","0 0 14 16"),r.style["vertical-align"]="middle",r.style.fill="currentColor",r.style.position="relative",r.style.bottom="1px",r.classList.add("opticon","opticon-"+e);var a=document.createElementNS(t,"title"),n=document.createElementNS(t,"path");switch(e){case"star":a.appendChild(document.createTextNode("Number of real stars (excluding author's star)")),n.setAttribute("d","M14 6l-4.9-0.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14l4.33-2.33 4.33 2.33L10.4 9.26 14 6z"),n.setAttribute("fill","black");break;case"up":a.appendChild(document.createTextNode("Number of commits ahead")),n.setAttribute("d","M5 3L0 9h3v4h4V9h3L5 3z"),n.setAttribute("fill","#84ed47"),r.setAttribute("viewBox","0 0 10 16"),r.setAttribute("height",16);break;case"flame":a.appendChild(document.createTextNode("Fork may be more recent than upstream.")),n.setAttribute("d","M5.05 0.31c0.81 2.17 0.41 3.38-0.52 4.31-0.98 1.05-2.55 1.83-3.63 3.36-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-0.3-6.61-0.61 2.03 0.53 3.33 1.94 2.86 1.39-0.47 2.3 0.53 2.27 1.67-0.02 0.78-0.31 1.44-1.13 1.81 3.42-0.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52 0.13-2.03 1.13-1.89 2.75 0.09 1.08-1.02 1.8-1.86 1.33-0.67-0.41-0.66-1.19-0.06-1.78 1.25-1.23 1.75-4.09-1.88-6.22l-0.02-0.02z"),n.setAttribute("fill","#d26911")}return n.appendChild(a),r.appendChild(n),r}async function m(e,t){let r=[];for(let a=0;a<e.length;a++)r.push(t(e[a],a,e));return Promise.all(r)}s.forEach((e,t,r)=>{var a;let n=e.owner.login;console.log("TCL: authorName",n);let i=a=e.stargazers_url;d.push(fetch(i).then(e=>{if(e.ok)return e.json();throw Error("Network response is not OK!")}).then(e=>{e.forEach(e=>{e.login===n&&r[t].stargazers_count>0&&(console.log(`TCL: starCount of ${n} before: ${r[t].stargazers_count}`),r[t].stargazers_count--,console.log(`TCL: starCount of ${n} after: ${r[t].stargazers_count}`))})}).catch(function(e){console.log("There has been a problem with your fetch operation: ",e.message)}))}),await Promise.all(d),s.sort((p=!0,g=parseInt,f=g?function(e){return g(e[_])}:function(e){return e[_]},p=p?-1:1,function(e,t){return p*(((e=f(e))>(t=f(t)))-(t>e))})),console.log("End of modifying stargazer count!"),await m(s,async(e,t,r)=>{try{var a;let o=e.owner.login,l=e.full_name,s=await c(n),d=await c(l),u=a=`https://api.github.com/repos/${l}/compare/${i}:${s}...${o}:${d}`,[p,g]=await h(u,["ahead_by","behind_by"]);r[t].ahead_by=p,r[t].behind_by=g}catch(f){console.log(f)}}),console.log("TCL: forks",s),s.sort(function e(){var t=[].slice.call(arguments),r=t.length;return function(e,a){var n,i,o,l,s,d,h;for(h=0;h<r&&(d=0,n=e[l="string"==typeof(o=t[h])?o:o.name],i=a[l],void 0!==o.primer&&(n=o.primer(n),i=o.primer(i)),s=o.highToLow?-1:1,n<i&&(d=-1*s),n>i&&(d=1*s),0===d);h++);return d}}({name:"stargazers_count",primer:parseInt,highToLow:!0},{name:"ahead_by",primer:parseInt,highToLow:!0},{name:"behind_by",primer:parseInt,highToLow:!1})),console.log("Beginning of DOM operations!"),s.reverse().forEach(e=>{let r=e.full_name,n=e.stargazers_count,i=!1;if(a.querySelectorAll("div.repo").forEach(e=>{let t=e.lastElementChild.getAttribute("href");if(t){let a=t.substring(1);a===r&&(i=!0,_(e))}}),!i){let o=document.createElement("div");o.classList.add("repo");let l=document.createElement("img");l.alt="",l.classList.add("network-tree"),l.src="https://github.githubassets.com/images/modules/network/t.png";let s=e.owner.type.toLowerCase(),d=document.createElement("a");d.setAttribute("data-hovercard-type",s);let h=e.owner.login;if("user"===s){let c=e.owner.id;d.setAttribute("data-hovercard-url",`/hovercards?user_id=${c}`)}else"organization"===s&&(d.setAttribute("data-hovercard-url",`/orgs/${h}/hovercard`),d.setAttribute("href",`/${h}`));d.setAttribute("href",`/${h}`),d.setAttribute("data-octo-click","hovercard-link-click"),d.setAttribute("data-octo-dimensions","link_type:self");let u=d.cloneNode(!0);u.style.paddingLeft="4px",u.style.paddingRight="4px",d.innerText=h,u.classList.add("d-inline-block");let p=document.createElement("img");p.classList.add("gravatar");let g=e.owner.avatar_url;p.src=g,p.width="16",p.height="16",p.alt=`@${h}`,u.appendChild(p);let f=document.createElement("a");f.style.paddingRight="4px",f.setAttribute("href",`/${r}`),f.innerText=e.name,o.appendChild(l),o.appendChild(u),o.appendChild(d),o.appendChild(document.createTextNode(" / ")),o.appendChild(f),_(o)}function _(t){let r=document.createDocumentFragment();if(r.appendChild($("star")),r.appendChild(document.createTextNode(n+" ")),e.ahead_by>0){let i=$("up");r.appendChild(i),r.appendChild(document.createTextNode(e.ahead_by+" "))}e.ahead_by-e.behind_by>0&&r.appendChild($("flame")),t.appendChild(r),a.firstElementChild.insertAdjacentElement("afterend",t)}t.remove(),console.log("TCL: starCount",e.stargazers_count)})}();